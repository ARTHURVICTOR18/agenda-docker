version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: nest_postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Postgres@!123
      POSTGRES_DB: agenda
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - '5433:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d agenda"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: nest_backend
    restart: unless-stopped
    depends_on:
      - db
    environment:
      NODE_ENV: production
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: Postgres@!123
      DB_NAME: agenda
    ports:
      - '3000:3000'
    command: >
      sh -c "
        until nc -z db 5432; do
          echo 'Aguardando Postgres em db:5432...';
          sleep 1;
        done;
        echo 'Postgres online â€” iniciando NestJS';
        node dist/main.js
      "

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react_frontend
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      REACT_APP_API_URL: http://backend:3000
    ports:
      - '3001:80'

volumes:
  pgdata:
